name: Lint & Code Quality

on:
  workflow_call:
  workflow_dispatch:

env:
  GO_VERSION: '1.24'

concurrency:
  group: lint-${{ github.ref }}
  cancel-in-progress: true

permissions:
  contents: read
  pull-requests: write

jobs:
  # Quality checks and linting
  lint:
    name: Code Quality
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version: ${{ env.GO_VERSION }}
          cache: true

      - name: Download dependencies with retry
        run: |
          # Set proxy and timeout to handle connection issues
          export GOPROXY=https://proxy.golang.org,direct
          export GOSUMDB=sum.golang.org
          export GOTIMEOUT=300s
          
          # Retry download up to 3 times
          for i in {1..3}; do
            echo "Attempting to download dependencies (attempt $i)"
            if timeout 300s go mod download; then
              echo "Dependencies downloaded successfully"
              break
            elif [ $i -eq 3 ]; then
              echo "Failed to download dependencies after 3 attempts"
              exit 1
            else
              echo "Download failed, retrying in 10 seconds..."
              sleep 10
            fi
          done

      - name: Run golangci-lint
        uses: golangci/golangci-lint-action@v8
        with:
          version: latest
          working-directory: .
        env:
          GOLANGCI_LINT_CACHE: /tmp/.cache/golangci-lint

      - name: Run go vet
        run: go vet $(go list ./... | grep -v '/examples/')

      - name: Check go mod tidy
        run: |
          go mod tidy
          git diff --exit-code go.mod go.sum

      - name: Check formatting
        run: |
          if [ "$(gofmt -s -l . | wc -l)" -gt 0 ]; then
            echo "## ❌ Formatting Issues Found" >> $GITHUB_STEP_SUMMARY
            echo "\`\`\`" >> $GITHUB_STEP_SUMMARY
            gofmt -s -l . >> $GITHUB_STEP_SUMMARY
            echo "\`\`\`" >> $GITHUB_STEP_SUMMARY
            echo "Please run 'gofmt -s -w .' to fix formatting issues" >> $GITHUB_STEP_SUMMARY
            exit 1
          fi
          echo "✅ Code formatting check passed" >> $GITHUB_STEP_SUMMARY

      - name: Summary
        if: success()
        run: |
          echo "## ✅ All Code Quality Checks Passed" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "- ✅ golangci-lint" >> $GITHUB_STEP_SUMMARY
          echo "- ✅ go vet" >> $GITHUB_STEP_SUMMARY
          echo "- ✅ go mod tidy" >> $GITHUB_STEP_SUMMARY
          echo "- ✅ gofmt" >> $GITHUB_STEP_SUMMARY
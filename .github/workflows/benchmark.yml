name: Benchmarks

on:
  workflow_call:
  workflow_dispatch:

env:
  GO_VERSION: '1.24'

permissions:
  contents: read
  pull-requests: write

jobs:
  # Performance benchmarks
  benchmark:
    name: Performance Tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version: ${{ env.GO_VERSION }}
          cache: true

      - name: Run benchmarks
        run: |
          echo "## ðŸ“Š Benchmark Results" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY

          # Run comprehensive benchmarks including optimization tests
          echo "### Core Performance Benchmarks" >> $GITHUB_STEP_SUMMARY
          echo "\`\`\`" >> $GITHUB_STEP_SUMMARY
          go test -bench=BenchmarkDownload -benchmem -benchtime=2s -timeout=5m ./internal/core/... | tee core-benchmarks.txt
          cat core-benchmarks.txt >> $GITHUB_STEP_SUMMARY
          echo "\`\`\`" >> $GITHUB_STEP_SUMMARY

          echo "### Optimization Benchmarks (P2 Features)" >> $GITHUB_STEP_SUMMARY
          echo "\`\`\`" >> $GITHUB_STEP_SUMMARY
          echo "Zero-Copy I/O:" >> $GITHUB_STEP_SUMMARY
          go test -bench=BenchmarkZeroCopy -benchmem -benchtime=2s ./internal/core/... >> $GITHUB_STEP_SUMMARY 2>&1 || true
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "Buffer Pool:" >> $GITHUB_STEP_SUMMARY
          go test -bench=BenchmarkBufferPool -benchmem -benchtime=2s ./internal/core/... >> $GITHUB_STEP_SUMMARY 2>&1 || true
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "Advanced Connection Pool:" >> $GITHUB_STEP_SUMMARY
          go test -bench=BenchmarkAdvancedPool -benchmem -benchtime=2s ./internal/network/... >> $GITHUB_STEP_SUMMARY 2>&1 || true
          echo "\`\`\`" >> $GITHUB_STEP_SUMMARY

          echo "### Integration Benchmarks" >> $GITHUB_STEP_SUMMARY
          echo "\`\`\`" >> $GITHUB_STEP_SUMMARY
          go test -bench=BenchmarkDownload -benchmem -benchtime=2s -timeout=3m ./... | tee benchmark-results.txt
          cat benchmark-results.txt | grep -v "internal/core" >> $GITHUB_STEP_SUMMARY || true
          echo "\`\`\`" >> $GITHUB_STEP_SUMMARY

      - name: Save benchmark results
        uses: actions/upload-artifact@v4
        with:
          name: benchmark-results
          path: benchmark-results.txt

      - name: Performance Regression Check
        run: |
          # Run performance check script
          if [ -f scripts/performance_check.sh ]; then
            ./scripts/performance_check.sh
          fi

      - name: Compare benchmarks (PR only)
        if: github.event_name == 'pull_request'
        run: |
          # Install benchstat
          go install golang.org/x/perf/cmd/benchstat@latest

          # Checkout base branch
          git fetch origin ${{ github.base_ref }}
          git checkout origin/${{ github.base_ref }}

          # Run base benchmarks (with optimization tests)
          go test -bench=BenchmarkDownload -benchmem -benchtime=2s -timeout=5m ./internal/core/... > base-core.txt
          go test -bench=BenchmarkDownload -benchmem -benchtime=2s -timeout=3m ./... > base-benchmarks.txt

          # Checkout PR branch
          git checkout ${{ github.sha }}

          # Compare results
          echo "## ðŸ“Š Benchmark Comparison" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY

          echo "### Core Performance (with optimizations)" >> $GITHUB_STEP_SUMMARY
          echo "\`\`\`" >> $GITHUB_STEP_SUMMARY
          benchstat base-core.txt core-benchmarks.txt >> $GITHUB_STEP_SUMMARY || echo "No significant changes in core" >> $GITHUB_STEP_SUMMARY
          echo "\`\`\`" >> $GITHUB_STEP_SUMMARY

          echo "### Overall Performance" >> $GITHUB_STEP_SUMMARY
          echo "\`\`\`" >> $GITHUB_STEP_SUMMARY
          benchstat base-benchmarks.txt benchmark-results.txt >> $GITHUB_STEP_SUMMARY || echo "No significant changes overall" >> $GITHUB_STEP_SUMMARY
          echo "\`\`\`" >> $GITHUB_STEP_SUMMARY